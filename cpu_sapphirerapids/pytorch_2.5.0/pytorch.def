Bootstrap: docker
From: ubuntu:noble

%setup

%environment

%files

%post
  apt-get update && apt-get install -y --no-install-recommends build-essential
  apt-get install -y python3-dev python3-pip python3-pkgconfig python3-venv libhdf5-dev
  apt-get install -y wget git patchelf unzip cmake
  apt-get install -y openmpi-bin openmpi-common openmpi-doc libopenmpi-dev libopenmpi3t64
  apt-get install -y libmkl-dev libmkl-rt libmkl-avx512 libomp-dev libmkl-scalapack-ilp64 libmkl-scalapack-lp64

  python3 -m pip install --break-system-packages scons

  # Enable MKLDNN backend
  export USE_MKL=ON USE_MKLDNN=ON MKL_THREADING_LAYER=GNU USE_CUDA=0 USE_MPI=ON USE_OPENMP=ON
  export MKL_ENABLE_INSTRUCTIONS=AVX512

  # Build PyTorch from the tip of the tree
  PYTORCH_VER=2.5.0
  cd /opt
  git clone --recursive http://github.com/pytorch/pytorch
  cd pytorch
  git checkout v${PYTORCH_VER}
  git submodule sync
  git submodule update --init --recursive
  python3 -m pip install --break-system-packages -r requirements.txt
  python3 setup.py bdist_wheel
  python3 -m pip install --break-system-packages `find ./dist -name *.whl`
  find /opt/pytorch -mindepth 1 -maxdepth 1 -type d ! -name "dist" -exec rm -r {} +

  # Build TorchVision
  cd /opt
  git clone https://github.com/pytorch/vision
  cd vision
  python3 setup.py bdist_wheel
  python3 -m pip install --break-system-packages `find ./dist -name *.whl`
  find /opt/vision -mindepth 1 -maxdepth 1 -type d ! -name "dist" -exec rm -r {} +

  # Build TorchAudio
  cd /opt
  git clone https://github.com/pytorch/audio
  cd audio
  python3 setup.py bdist_wheel
  python3 -m pip install --break-system-packages `find ./dist -name *.whl`
  find /opt/audio -mindepth 1 -maxdepth 1 -type d ! -name "dist" -exec rm -r {} +

  python3 -m pip freeze > /opt/requirements.txt

%runscript
  exec "$@"
